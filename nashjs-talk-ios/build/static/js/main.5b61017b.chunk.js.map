{"version":3,"sources":["NativeStorage.js","components/ToDo.js","components/ToDoList.js","components/AddToDo.js","components/SelectedToDoModal.js","components/Loader.js","App.js","serviceWorker.js","index.js"],"names":["setItem","key","value","message","JSON","stringify","console","log","window","nativeInterface","setUserDefaultItem","getItem","getUserDefaultItem","removeItem","removeUserDefaultItem","ToDo","toDo","setSelectedToDo","className","isComplete","onClick","priority","title","List","toDos","setSelectedToDoIndex","length","map","i","style","textAlign","AddToDo","addToDo","useState","isCreatingTodo","setIsCreatingTodo","setTitle","description","setDescription","setPriority","startPos","setStartPos","isDragToCloseTriggered","setIsDragToCloseTriggered","dragDistance","setDragDistance","shouldBeOpen","onTouchStart","e","touches","pos","screenY","handleDragStart","onTouchMove","Math","round","handleDrag","onTouchEnd","height","transition","onSubmit","preventDefault","name","id","placeholder","onChange","target","onBlur","scrollTo","type","checked","undefined","disabled","trim","Modal","close","updateToDo","deleteToDo","zIndex","stopPropagation","opacity","textDecoration","update","Loader","App","setToDos","selectedToDoIndex","handleIncomingWrapperMessages","str","data","parse","incomingToDos","payload","decodeURIComponent","Array","isArray","NativeStorage","ToDoList","newToDos","encodeURIComponent","SelectedToDoModal","updatedToDo","index","tempToDos","splice","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b61017b.chunk.js","sourcesContent":["\n    function setItem(key, value) {\n        const message = JSON.stringify({ key, value });\n        console.log(\"%c[handleOutgoingWrapperMessages] -> outgoing setItem: \", 'color: darkcyan', message);\n        window.nativeInterface.setUserDefaultItem(message);\n    }\n    function getItem(key) {\n        const message = JSON.stringify({ key });\n        console.log(\"%c[handleOutgoingWrapperMessages] -> outgoing getItem: \", 'color: darkcyan', message);\n        window.nativeInterface.getUserDefaultItem(message);\n    }\n    function removeItem(key) {\n        const message = JSON.stringify({ key });\n        console.log(\"%c[handleOutgoingWrapperMessages] -> outgoing removeItem: \", 'color: darkcyan', message);\n        window.nativeInterface.removeUserDefaultItem(message);\n    }\n\n\n\nexport default {\n    setItem,\n    getItem,\n    removeItem\n};","import React from 'react';\n\nconst ToDo = ({ toDo, setSelectedToDo }) => {\n   const iconClassNames = ['fa fa-exclamation-triangle','fa fa-bolt', 'fa fa-bomb'];\n    return (\n    <li className={\"flex-left todo\" + (toDo.isComplete ? \" completed\" : '')}  onClick={() => setSelectedToDo(toDo)} >\n        <div className=\"flex-left\">\n            <span className={ \"icon\" } >\n                <i className={iconClassNames[toDo.priority-1]}/>\n            </span>\n\n            <span className=\"title\">{toDo.title}</span>\n        </div>\n\n        <i className=\"fa fa-ellipsis-h more gray\" ></i>\n    </li>\n    )\n}\n\nexport default ToDo;","import React from 'react';\nimport ToDo from './ToDo';\n\n\nconst List = ({ toDos, setSelectedToDoIndex }) => {\n\n    return (\n        <ul className=\"todo-list slideIn\">\n            {\n                toDos.length ? \n                toDos.map((toDo, i) => <ToDo toDo={toDo}  key={i} setSelectedToDo={() => setSelectedToDoIndex(i)}/>) :\n                <h2 className=\"default white\" style={{textAlign:'center'}}>You dont have any tasks!</h2>\n            }\n        </ul>\n    )\n}\n\nexport default List;","import React, { useState, Fragment } from 'react';\n\nconst AddToDo = ({ addToDo, toDos }) => {\n    const [isCreatingTodo, setIsCreatingTodo] = useState(false);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [priority, setPriority] = useState(1);\n    \n    const [startPos, setStartPos] = useState(0);\n    const [isDragToCloseTriggered, setIsDragToCloseTriggered] = useState(false);\n    const [dragDistance, setDragDistance] = useState(0)\n\n    const dragThreshold = 100;\n    function shouldBeOpen() {\n        return isCreatingTodo || (toDos && toDos.length === 0);\n    }\n    function handleNewTodo() {\n        if(toDos === undefined) return\n        if(isCreatingTodo)  createTodo();\n        setIsCreatingTodo(!isCreatingTodo);\n    }\n\n    function createTodo() {\n        const newToDo = { title, description, priority };\n        addToDo( newToDo )\n        clearTodo()\n    }\n\n    function clearTodo() {\n        setTitle('');\n        setDescription('');\n    }\n\n    function handleDragStart(touches) {\n        if(!toDos || toDos.length === 0) return\n        const pos = touches.screenY;\n        setStartPos(pos)\n    }\n    function handleDrag(touches) {\n        if(!toDos || toDos.length === 0) return\n        const pos = touches.screenY;\n        setDragDistance(Math.round(pos - startPos))\n        if(dragDistance > dragThreshold) {\n            if(!isDragToCloseTriggered) setIsDragToCloseTriggered(true);\n        } else {\n            if(isDragToCloseTriggered) setIsDragToCloseTriggered(false);\n        } \n    }\n    function handleDragEnd(touches) {\n        if(isDragToCloseTriggered) setIsCreatingTodo(false);\n        setStartPos(0)\n        setDragDistance(0);\n        setIsDragToCloseTriggered(false)\n    }\n    return (\n        <Fragment>\n            {shouldBeOpen() && <div className=\"overlay fadeIn\"/>}\n            <section className={\"add-todo-bar\" + (shouldBeOpen() ? ' open-drawer' : \"\")} \n                onTouchStart={(e) => handleDragStart(e.touches[0])}\n                onTouchMove={(e) => handleDrag(e.touches[0])}\n                onTouchEnd={(e) => handleDragEnd(e.touches[0])}\n                style={ dragDistance > 0 ? {height: `calc(80vh - ${dragDistance}px)`, transition: '0ms'} : {} }\n            >\n                <form onSubmit={(e) => e.preventDefault()}>\n                    {shouldBeOpen()  &&\n                    <fieldset className={ dragDistance > dragThreshold ? \"fadeOut\" : \"fadeIn delay-400ms\"}>\n                        <label>New Task</label>  \n                        <input  name=\"title\" id=\"newtodo-title\" value={title} placeholder=\"Name your todo\" onChange={(e) => setTitle(e.target.value)} onBlur={window.scrollTo(0,0)}/>\n                        {/* onBlur here fixes an issue in iOS13 where the touch targets dont reset properly after the webview moves up for the keyboard and then back down once the keyboard closes. \n                        Manually setting the scroll resets the view and keeps everything touching correctly. */}\n                        <label>Description</label>   \n                        <textarea name=\"title\" id=\"newtodo-description\" value={description} onChange={(e) => setDescription(e.target.value)} onBlur={window.scrollTo(0,0)}/>\n                        <label>Priority</label>\n                        <div className=\"flex-left\">\n                            <label className=\"priority\">\n                                <i className={\"fa fa-exclamation-triangle\" + (priority === 1 ? ' charcoal' : '')}/> \n                                { priority === 1 && <div className=\"dot fadeIn\"/>}\n                                <input type=\"radio\" id=\"low\" name=\"low\" value={1} checked={priority === 1}onChange={() => setPriority(1)}/>\n                            </label>\n                            <label className=\"priority\">\n                                <i className={\"fa fa-bolt\" + (priority === 2 ? ' charcoal' : '')}/> \n                                { priority === 2 && <div className=\"dot fadeIn\"/>}\n                                <input type=\"radio\" id=\"mid\" name=\"mid\" value={1} checked={priority === 2} onChange={() => setPriority(2)}/>\n                            </label>\n                            <label className=\"priority\">\n                                <i className={\"fa fa-bomb\" + (priority === 3 ? ' charcoal' : '')}/> \n                                { priority === 3 && <div className=\"dot fadeIn\"/>}\n                                <input type=\"radio\" id=\"high\" name=\"high\" value={1} checked={priority === 3} onChange={() => setPriority(3)}/>\n                            </label>\n                        </div>\n                    </fieldset> }\n                    <button className={'new-todo-btn' + (shouldBeOpen() ? ' create-todo-btn' : \"\")} onClick={handleNewTodo} disabled={shouldBeOpen() && title.trim() === ''}>\n                        {\n                        shouldBeOpen() ? \n                        <span className=\"fadeIn delay-200ms\">Create New ToDo!</span> :\n                            <i className=\"fa fa-plus\"></i>\n                        }\n                    </button>  \n                </form>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default AddToDo;","import React from 'react';\n\nconst Modal = ({ toDo, close, updateToDo, deleteToDo }) => {\n    const iconClassNames = ['fa fa-exclamation-triangle','fa fa-bolt','fa fa-bomb'];\n    function toggleCompleted() {\n        const update = {...toDo};\n        update.isComplete = !update.isComplete;\n        updateToDo(update)\n        close()\n    }\n    function handleDeleteToDo() {\n        close()\n        deleteToDo(toDo)\n    }\n\n    return (\n            <div className=\"overlay fadeIn flex-center\" style={{zIndex: 30}} onClick={close}>\n                <section className=\"modal slideIn\" onClick={(e) => e.stopPropagation()}>\n                    <button className=\"close-btn\" onClick={close}><i className=\"fa fa-times\"/></button>\n                    <span className=\"priority\" >\n                        <i className={iconClassNames[toDo.priority-1]} style={toDo.isComplete ? {opacity: '.3'} : {}}/>\n                    </span>\n                    <h3 style={toDo.isComplete ? {textDecoration: 'line-through', opacity: '.3'} : {}}>{toDo.title}</h3>\n                    <p style={toDo.isComplete ? {textDecoration: 'line-through', opacity: '.3'} : {}}>{toDo.description}</p>\n                    <button className={\"btn\" + (toDo.isComplete ? '': ' success')} onClick={toggleCompleted}>\n                        {toDo.isComplete ? \"Unmark Done\" : \"Mark as Done\"}\n                        {toDo.isComplete ? <i className=\"fa fa-undo\"/> : <i className=\"fa fa-check\"/>}\n                    </button>\n                    {toDo.isComplete && <button className=\"btn delete\" onClick={handleDeleteToDo}> Delete <i className=\"fa fa-trash\"/></button>}\n                </section>\n            </div>\n    )\n}\n\nexport default Modal;","import React from 'react';\nconst Loader = () => {\n    return (<div className=\"loader-wrapper\">\n    <div className=\"loader\">\n        <div className=\"dot1 teal\"></div>\n        <div className=\"dot2 teal\"></div>\n        <div className=\"dot3 teal\"></div>\n    </div>   \n</div>)\n}\n\nexport default Loader;","import React, { useState } from 'react';\nimport './App.css';\nimport NativeStorage from './NativeStorage'\n\nimport ToDoList from './components/ToDoList';\nimport AddToDoBar from './components/AddToDo';\nimport SelectedToDoModal from './components/SelectedToDoModal'\nimport Loader from './components/Loader'\n// import testToDos from './testTodos';\n\nfunction App() {\n  const [toDos, setToDos] = useState(undefined);\n  const [selectedToDoIndex, setSelectedToDoIndex] = useState(-1);\n  //SET A HNDLER FUNCTION ON THE WINDOW TO ACCEPT MESSAGES FROM THE WRAPPER\n  if(window.handleIncomingWrapperMessages === undefined) {\n    window.handleIncomingWrapperMessages = function(str) {\n    const data = JSON.parse(str);\n    console.log(\"%c[handleIncomingWrapperMessages] <- incoming message: \", 'color: darkcyan;', data);\n    switch(data.type) {\n      case 'toDos': \n        const incomingToDos = typeof data.payload === 'string' ? JSON.parse(decodeURIComponent(data.payload)) : data.payload;\n        setToDos(Array.isArray(incomingToDos) ? incomingToDos : []);\n        break;\n      default: \n        console.log('%c[handleIncomingWrapperMessages] Didnt fit case: ', 'background: red; color: white;', data);\n    }\n  }\n}\n  //REQUEST TODOS FROM THE WRAPPER WHEN JS APP LAUNCHES\n  if(toDos === undefined && window.nativeInterface) NativeStorage.getItem('toDos')\n\n  function addToDo(toDo) {\n    const newToDos = [...toDos, { isComplete: false, ...toDo}]\n    setToDos(newToDos);\n    // SAVE UPDATED TODOS TO THE WRAPPER\n    if(window.nativeInterface) {\n      NativeStorage.setItem('toDos', encodeURIComponent(JSON.stringify(newToDos)));\n    }\n  }\n  function updateToDo(updatedToDo) {\n    const newToDos = [...toDos];\n    newToDos[selectedToDoIndex] = updatedToDo;\n    setToDos(newToDos);\n    // SAVE UPDATED TODOS TO THE WRAPPER\n    if(window.nativeInterface) NativeStorage.setItem('toDos', encodeURIComponent(JSON.stringify(newToDos)));\n  }\n  function deleteToDo (index){\n    let tempToDos = [...toDos]\n    tempToDos.splice(index, 1)\n     setToDos(tempToDos)\n     // SAVE UPDATED TODOS TO THE WRAPPER\n     if(window.nativeInterface) NativeStorage.setItem('toDos', encodeURIComponent(JSON.stringify(tempToDos.length ? tempToDos : [])));\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 className=\"teal\">NashJS ToDo Tracker</h1>\n      </header>\n      {/* TODO LIST OR LOADER */}\n      { Array.isArray(toDos) ? <ToDoList toDos={toDos} setSelectedToDoIndex={setSelectedToDoIndex}/> : <Loader /> }\n\n      {/* NEW TODO COMPONENT */}\n      <AddToDoBar addToDo={addToDo} toDos={toDos} />\n\n      {/* TODO MODAL */}\n      {selectedToDoIndex > -1 && <SelectedToDoModal \n          toDo={toDos[selectedToDoIndex]} \n          close={() => setSelectedToDoIndex(-1)}\n          updateToDo={updateToDo}\n          deleteToDo={() => deleteToDo(selectedToDoIndex)}\n        />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}